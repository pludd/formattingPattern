#+title: Formatting Pattern
#+author: Nathan Stonewall
#+email: nathan.stonewall@gs1.se
#+date: <2023-10-05 Thu>
#+OPTIONS: H:1 num:nil \n author:Nathan Stonewall date:2023-09-15 d:(not "HORSE")
# #+TOC: headlines 1
#+MACRO: NEWLINE @@latex:\\@@ @@html:<br>@@
#+HTML_HEAD: <style type="text/css">body{ max-width:40%; margin: auto;} .custom-list { margin-bottom: 50px; }</style>

{{{NEWLINE}}}
* Problem
- Community expressed need to send **styled textual information** via GDSN.

- ~FormattedDescription~ and ~formattingPattern~ provide this

- But these are difficult to implement and use

- HTML code currently used by some datapools, but:
    - Unstandardized
    - Unsafe

    :HORSE:
    HTML can be used to run JavaScript, leading to cross-site scripting.

    Cross-site scripting involves an attacker injecting a script into a web application's output
    and executing it from a user's browser.

    User-input HTML makes websites more susceptible to hacking.
    :END:
    - Must be escaped/unescaped
    - Not adapted to current XML modeling

{{{NEWLINE}}}
-----
{{{NEWLINE}}}
* Current examples of styled TII
*** TIIG framework
#+BEGIN_SRC text
formattingPattern=“(1,p),(1,em),(56,/em),(141,em),(159,/em),
                   (214,em),(266,/em),(348,em),(362,/em),
                   (446,em),(456,/em),(457,/p),(459,p),
                   (459,em),(512,/em),(556,em),(578,/em),
                   (604,em),(622,/em),(969,/p)">
#+END_SRC
*** HTML
#+BEGIN_SRC xml
<stringAVP attributeName="ingredientStatementFormattingPattern">&lt;u&gt;Stuff&lt;/u&gt;</stringAVP>
<stringAVP attributeName="ingredientStatementFormattingPattern">stuff&lt;br&gt;Ingredients: Stuff</stringAVP>
#+END_SRC

{{{NEWLINE}}}


{{{NEWLINE}}}

-----

* Suggested solution

** Implement [[https://en.wikipedia.org/wiki/BBCode][BBCode formatting]] or similar [[https://en.wikipedia.org/wiki/Lightweight_markup_language][lightweight markup language]].
:HORSE:
BBCode acts as a buffer for HTML.
So while you can do hundreds of different things with HTML, BBCode limits you to a few basic operations.
:END:

** Advantages
**** Simple
:HORSE:
HTML is large and complex; BBCode can be learned in a few minutes.
:END:
**** Safe
**** Flexible
**** Well-established
**** Simple to implement
:HORSE:
Parsers available for any imaginable tooling.
:END:


*** Syntax
| BBCode            | Effect                       |
|-------------------+------------------------------|
| [b]               | Bold                         |
| [i]               | Italic                       |
| [u]               | Underline                    |
| [br]              | Line break                   |
| [url]             | Insert link                  |
| [color=color]     | Change text color to {color} |
| [align=alignment] | Align text e.g. to center    |
| [list]            | Make list                    |
| [*]               | Add list item                |
|-------------------+------------------------------|


*** Example BBCode
#+BEGIN_SRC text
[b]4 X Flamin’ Hot Flavour Baked Corn Snack. Ingredients: [/b]Maize,
   Vegetable Oil, Flamin Hot Flavour [b]Hydrolysed Soya Protein[/b],
   [i]Fructose[/i], Flavourings ...
#+END_SRC

{{{NEWLINE}}}

** Suggested process:
***** Service providers implement rich-text editors in their GUIs, or ...
***** End users fill in TII, by hand.
***** DP forwards TII to recipient
***** Recipient decides how or whether to handle styled TII.

{{{NEWLINE}}}

* Considerations
***** Limit complexity → Agree on allowed subset of BBCode?
***** Modeling         → Replace ~formattingPattern~, ~sequenceNumber~?
***** Validations      → For all styled text, ensure recipients get same text unstyled?
{{{NEWLINE}}}
